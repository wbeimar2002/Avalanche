trigger:
- api-tests
 
# variables:
  #system.debug: true
  #disable.coverage.autogenerate: true

pool:
  vmImage: 'ubuntu-latest'
 
steps:

- script: >-
    dotnet restore 'PrimeService.Tests/PrimeService.Tests.csproj'

- script: >-
    dotnet build 'PrimeService.Tests/PrimeService.Tests.csproj'

- script: >-
    dotnet restore 'PrimeService.Tests/PrimeService.Tests.csproj'

- script: >-
    dotnet test 'PrimeService.Tests/PrimeService.Tests.csproj' /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura

- script: >-
    echo "##vso[task.prependpath]$HOME/.dotnet/tools"

- script: >-
    dotnet tool install -g dotnet-reportgenerator-globaltool

- script: >-
    reportgenerator
    "-reports:PrimeService.Tests/coverage.cobertura.xml"
    "-targetdir:coveragereport"
    -reporttypes:Html

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'PrimeService.Tests/coverage.cobertura.xml'