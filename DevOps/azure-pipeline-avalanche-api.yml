variables:
- group: vg-dev-avalanche-api

- name: AGENT_USE_NODE10
  value: true
trigger:
- dev

resources:
  repositories:
  - repository: devops
    type: git
    name: devops
    ref: dev

  - repository: avalanche-resources
    type: git
    name: avalanche-resources
    ref: dev

pool: $(pool)

name: $(BuildNumberPrefix)-$(MajorVersion).$(MinorVersion).$(Patch).$(ReleaseStage)_$(MajorVersion).$(MinorVersion).$(Date:yyMM).$(Date:dd)$(Rev:rr)_$(Date:yyyyMMdd)T$(Date:hhmmss)

stages:

# stage for creating PR comments if nuget pkgs verssion are not up to date
- template: pipeline\templates\nuget-version-check.yml@devops

- stage: build

  jobs:

  - job: build_test_publish
    steps:
    - checkout: self
    - checkout: devops
    - checkout: avalanche-resources

    - task: PowerShell@2
      displayName: List environmental variables
      inputs:
        targetType: inline
        script: Get-ChildItem -Path Env:\

    - task: PowerShell@1
      displayName: Apply Version To Application
      inputs:
        scriptName: devops/misc-scripts/ApplyVersionToAssemblies.ps1
    
    - template: pipeline\templates\restore-build-test-msbuild9.yml@devops
      parameters:
        adoInstanceurl: AdoInstanceUrl
        repo: $(Repo)
        projectsolution: $(ProjectSolution)
        testfilter: $(TestFilter)
        buildConfiguration: $(BuildConfiguration)
        buildplatform: $(BuildPlatform)
        vstsfeed: $(VstsFeed)
        adoproject: $(AdoProject)
        sonarprojectkey: $(SonarProjectKey)
        sonarprojetname: $(SonarProjectKey)

    - bash: |
              echo "##vso[task.setvariable variable=AVALANCHE_CLIENT_CERTIFICATE_PASSWORD]0123456789"
              echo "##vso[task.setvariable variable=AVALANCHE_CLIENT_CERTIFICATE_PATH]$(Build.SourcesDirectory)\avalanche-resources\certificates\grpc_localhost_root_l1.pfx"
              echo "##vso[task.setvariable variable=AVALANCHE_SERVER_VALIDATION_CERTIFICATE_PATH]$(Build.SourcesDirectory)\avalanche-resources\certificates\grpc_localhost_root_l1.cer"
              echo "##vso[task.setvariable variable=AVALANCHE_CONFIGURATION_SERVICE_PORT]5012"
              echo "##vso[task.setvariable variable=AVALANCHE_CONFIGURATION_SERVICE_HOST]10.161.22.121"
      displayName: 'Set environmental variables'

    - powershell: |
          Write-Host "AVALANCHE_CLIENT_CERTIFICATE_PASSWORD       ="$(AVALANCHE_CLIENT_CERTIFICATE_PASSWORD)
          Write-Host "AVALANCHE_CLIENT_CERTIFICATE_PATH           ="$(AVALANCHE_CLIENT_CERTIFICATE_PATH)
          Write-Host "AVALANCHE_SERVER_VALIDATION_CERTIFICATE_PATH="$(AVALANCHE_SERVER_VALIDATION_CERTIFICATE_PATH)
          Write-Host "AVALANCHE_CONFIGURATION_SERVICE_PORT        ="$(AVALANCHE_CONFIGURATION_SERVICE_PORT)
          Write-Host "AVALANCHE_CONFIGURATION_SERVICE_HOST        ="$(AVALANCHE_CONFIGURATION_SERVICE_HOST)
      displayName: 'List environmental variables'

    - task: CopyFiles@2
      condition: and(succeeded(),  ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        Contents: |
          $(Repo)/$(BinFolder)/**
        TargetFolder: $(Build.ArtifactStagingDirectory)
      displayName: Copy Files to $(Build.ArtifactStagingDirectory)
    - task: PublishPipelineArtifact@1
      condition: and(succeeded(),  ne(variables['Build.Reason'], 'PullRequest'))
      inputs:
        targetPath: $(Pipeline.Workspace)
        artifact: drop
        publishLocation: pipeline
      displayName: Pub pipeline art

- stage: publish_te
  dependsOn: build
  condition: and(succeeded(), eq(variables['publish_te'], 'true'))

  jobs:
  - job: publish

    pool:
      name: ism-build-pool-on-prem
      demands:
      - msbuild

    steps:
    - checkout: devops
    - task: DownloadPipelineArtifact@2
      displayName: Download Pipeline Artifact
      inputs:
        source: current
        artifactName: drop
        targetPath: $(System.DefaultWorkingDirectory)\drop

    - template: pipeline\templates\create-push-octopus-release1.yml@devops
      parameters:
        octopusBaseURL: $(OctopusBaseURL)
        octopusAPIKey: $(OctopusAPIKey)
        octopusSpaceName: $(OctopusSpaceName)
        octopusEnvironmentName: $(OctopusEnvironmentName)
        octopusChannelName: $(OctopusChannelName)
        octopusProject: $(OctopusProject)
        octopusPackageId: $(OctopusPackageId)
        triggerBranch: dev
    - template: pipeline\templates\copy-release-to-network-share.yml@devops
      parameters:
        adoProject: $(AdoProject)
        vsProjectNamePrefix: $(VsProjectNamePrefix)
        networkShare: $(NetworkShare)
        networkSubPath: $(NetworkSubPath)
        networkUser: $(NetworkUser)
        networkPassword: $(NetworkPassword)
        builidNumber: $Env:BUILD_BUILDNUMBER
        copyTrue: $(copy_to_network_share)
