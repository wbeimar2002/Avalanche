// Auto-generated by the Load Impact converter
import http from 'k6/http';
import { check, fail } from 'k6';
import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import { group } from "k6";

export let options = { maxRedirects: 4, iterations: "10" };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    ADMIN_USR: "admin@admin.com",
    ADMIN_PASS: "12345678",
    LOGIN_URL: "https://localhost:6001/api/login"
  }
});

export default function() {
  postman[Pre].push(() => {

    var currentToken = pm.environment.get("CURRENT_ACCESS_TOKEN");

    if (currentToken === undefined) {

      //https://k6.io/docs/using-k6/http-requests
      var url = pm.environment.get("LOGIN_URL");
      var payload = JSON.stringify({
        email: pm.environment.get("ADMIN_USR"),
        password: pm.environment.get("ADMIN_PASS")
      });

      var params = {
        headers: {
          'Content-Type': 'application/json',
        },
      };

      var res = http.post(url, payload, params);

      // Verify that we ended up on the user page
      check(res, {
        'login succeeded': 'OK'
      }) || fail('login failed');

      //https://k6.io/docs/javascript-api/k6-http/response-k6-http
      //console.log("Saving the token");
      var responseJson = res.json();
      //console.log("Token: " + responseJson.accessToken);

      pm.environment.set(
        "CURRENT_ACCESS_TOKEN",
        responseJson.accessToken
      );
    }

  });

  group("Setup", function() {
    postman[Request]({
      name: "Get Physicians",
      id: "aa7243dd-c9a9-4651-86e3-fb416ef5f152",
      method: "GET",
      address: "https://localhost:5001/Physicians",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Search Patient Filtered Details",
      id: "ef8eca58-59e1-48ec-b693-eaf1dee86c31",
      method: "POST",
      address: "https://localhost:5001/Patients/filteredDetailed",
      data: '{"roomName":"Sorey","page":0,"limit":10}',
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Contains data for paging", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.have.a.property("items");
          pm.expect(jsonData).to.have.a.property("nextPage");
          pm.expect(jsonData).to.have.a.property("previousPage");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Search Patient by Keyword",
      id: "a9146e04-15a7-4bf0-bc2b-cf7a6dd4e014",
      method: "POST",
      address: "https://localhost:5001/Patients/filtered",
      data: '{"term":"","page":0,"limit":10}',
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Contains data for paging", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.have.a.property("items");
          pm.expect(jsonData).to.have.a.property("nextPage");
          pm.expect(jsonData).to.have.a.property("previousPage");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Quick patient registration",
      id: "8255c351-b826-4639-934b-af0ebf4145e6",
      method: "POST",
      address: "https://localhost:5001/Patients/quick",
      headers: {
        authority: "localhost:5001",
        "content-length": "0",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Successful POST request", function() {
          pm.expect(pm.response.code).to.be.oneOf([201, 202]);
        });

        pm.test("Patient was created", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.have.property("id");
          pm.expect(jsonData).to.have.property("mrn");
          pm.expect(jsonData).to.have.property("dateOfBirth");
          pm.expect(jsonData).to.have.property("firstName");
          pm.expect(jsonData).to.have.property("lastName");
          pm.expect(jsonData).to.have.property("department");
          pm.expect(jsonData).to.have.property("sex");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Register new patient",
      id: "3558ef72-a636-4af9-a8ae-4e4ff626f49d",
      method: "POST",
      address: "https://localhost:5001/Patients",
      data:
        '{\r\n  "id": 0,\r\n  "mrn": "string",\r\n  "firstName": "string",\r\n  "lastName": "string",\r\n  "dateOfBirth": "2020-09-03T15:01:03.876Z",\r\n  "sex": {\r\n    "translationKey": "string",\r\n    "id": "string",\r\n    "value": "string"\r\n  },\r\n  "department": {\r\n    "translationKey": "string",\r\n    "id": "string",\r\n    "value": "string"\r\n  },\r\n  "procedureType": {\r\n    "translationKey": "string",\r\n    "id": "string",\r\n    "value": "string"\r\n  },\r\n  "physician": {\r\n    "id": "string",\r\n    "firstName": "string",\r\n    "lastName": "string"\r\n  },\r\n  "scopeSerialNumber": "string"\r\n}',
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Successful POST request", function() {
          pm.expect(pm.response.code).to.be.oneOf([201, 202]);
        });

        pm.test("Patient was created", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.have.property("id");
          pm.expect(jsonData).to.have.property("mrn");
          pm.expect(jsonData).to.have.property("dateOfBirth");
          pm.expect(jsonData).to.have.property("firstName");
          pm.expect(jsonData).to.have.property("lastName");
          pm.expect(jsonData).to.have.property("department");
          pm.expect(jsonData).to.have.property("sex");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Procedure Types",
      id: "20062a23-401a-4c96-aea7-86bf258861ef",
      method: "GET",
      address: "https://localhost:5001/Metadata/proceduretypes",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Sexes",
      id: "1734086d-6477-4686-98d0-a4fccc5b3fc4",
      method: "GET",
      address: "https://localhost:5001/Metadata/Sexes",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Setup Settings",
      id: "45721b13-5a60-4b9b-88fa-09a6d253bcb9",
      method: "GET",
      address: "https://localhost:5001/Settings/setup",
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  group("Health", function() {
    postman[Request]({
      name: "Health Check",
      id: "387324d8-9c0e-4d8b-be35-40cc1ecfc013",
      method: "GET",
      address: "https://localhost:5001/Health/check/",
      headers: {
        authority: "localhost:6001",
        accept: "*/*",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.34 Safari/537.36 Edg/81.0.416.20",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        "sec-fetch-dest": "empty",
        referer: "https://localhost:6001/index.html",
        "accept-language": "en-US,en;q=0.9,es;q=0.8,th;q=0.7"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      }
    });

    postman[Request]({
      name: "Health Check Secure",
      id: "eafd8142-2a3b-41c9-ad35-5a6d5aadf146",
      method: "GET",
      address: "https://localhost:5001/Health/check/secure",
      headers: {
        authority: "localhost:5001",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      pre() {
        var currentToken = pm.environment.get("CURRENT_ACCESS_TOKEN");

        if (currentToken === undefined) {
    
          //https://k6.io/docs/using-k6/http-requests
          var url = pm.environment.get("LOGIN_URL");
          var payload = JSON.stringify({
            email: pm.environment.get("ADMIN_USR"),
            password: pm.environment.get("ADMIN_PASS")
          });
    
          var params = {
            headers: {
              'Content-Type': 'application/json',
            },
          };
    
          var res = http.post(url, payload, params);
    
          // Verify that we ended up on the user page
          check(res, {
            'login succeeded': 'OK'
          }) || fail('login failed');
    
          //https://k6.io/docs/javascript-api/k6-http/response-k6-http
          //console.log("Saving the token");
          var responseJson = res.json();
          //console.log("Token: " + responseJson.accessToken);
    
          pm.environment.set(
            "CURRENT_ACCESS_TOKEN",
            responseJson.accessToken
          );
        }   
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  group("Licensing", function() {
    postman[Request]({
      name: "Validate Licensing",
      id: "fb4c3711-d472-4977-ae52-758aacc5c2a3",
      method: "POST",
      address: "https://localhost:5001/Licenses/11111",
      headers: {
        authority: "localhost:5001",
        "content-length": "0",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        authorization: "Bearer ddd",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get All Software Installed",
      id: "1cd3d5f6-2c93-4303-ad61-3064e015216c",
      method: "GET",
      address: "https://localhost:5001/Licenses",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  group("PGS", function() {
    postman[Request]({
      name: "Get Content Types",
      id: "bbec7cb4-5d22-40fa-ae16-267e95c882a2",
      method: "GET",
      address: "https://localhost:5001/Metadata/contenttypes",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Content by Type",
      id: "9dc75ebe-da75-4f9d-adea-bd1a2f5d0ee7",
      method: "GET",
      address: "https://localhost:5001/Metadata/Content/P",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get PGS outputs",
      id: "960cc501-d7b6-4b9f-9e6d-e8cd382c80b9",
      method: "GET",
      address: "https://localhost:5001/Devices/outputs/pgs",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Play Video Command",
      id: "810ee514-b862-4231-a0c7-ca34feaa1704",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":10,\r\n   "additionalInfo":"{{$guid}}",\r\n   "message":"{\\"type\\":\\"offer\\",\\"sdp\\":\\"v=0\\\\r\\\\no=- 5483512702478408207 2 IN IP4 127.0.0.1\\\\r\\\\ns=-\\\\r\\\\nt=0 0\\\\r\\\\na=group:BUNDLE 0 1\\\\r\\\\na=msid-semantic: WMS\\\\r\\\\nm=audio 9 UDP/TLS/RTP/SAVPF 111 103 104 9 0 8 106 105 13 110 112 113 126\\\\r\\\\nc=IN IP4 0.0.0.0\\\\r\\\\na=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\na=ice-ufrag:K/dw\\\\r\\\\na=ice-pwd:ps9DeVZTxthrlS8j5xvUMfQ4\\\\r\\\\na=ice-options:trickle\\\\r\\\\na=fingerprint:sha-256 AE:A8:F2:1B:49:9E:32:75:5B:72:21:DB:E4:48:71:CA:C2:E8:AB:28:5E:D1:EA:36:88:B7:14:E3:97:94:92:02\\\\r\\\\na=setup:actpass\\\\r\\\\na=mid:0\\\\r\\\\na=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level\\\\r\\\\na=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\\\\r\\\\na=extmap:3 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\\\\r\\\\na=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid\\\\r\\\\na=extmap:5 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\\\\r\\\\na=extmap:6 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\\\\r\\\\na=recvonly\\\\r\\\\na=rtcp-mux\\\\r\\\\na=rtpmap:111 opus/48000/2\\\\r\\\\na=rtcp-fb:111 transport-cc\\\\r\\\\na=fmtp:111 minptime=10;useinbandfec=1\\\\r\\\\na=rtpmap:103 ISAC/16000\\\\r\\\\na=rtpmap:104 ISAC/32000\\\\r\\\\na=rtpmap:9 G722/8000\\\\r\\\\na=rtpmap:0 PCMU/8000\\\\r\\\\na=rtpmap:8 PCMA/8000\\\\r\\\\na=rtpmap:106 CN/32000\\\\r\\\\na=rtpmap:105 CN/16000\\\\r\\\\na=rtpmap:13 CN/8000\\\\r\\\\na=rtpmap:110 telephone-event/48000\\\\r\\\\na=rtpmap:112 telephone-event/32000\\\\r\\\\na=rtpmap:113 telephone-event/16000\\\\r\\\\na=rtpmap:126 telephone-event/8000\\\\r\\\\nm=video 9 UDP/TLS/RTP/SAVPF 96 97 98 99 100 101 102 122 127 121 125 107 108 109 124 120 123 119 114 115 116\\\\r\\\\nc=IN IP4 0.0.0.0\\\\r\\\\na=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\na=ice-ufrag:K/dw\\\\r\\\\na=ice-pwd:ps9DeVZTxthrlS8j5xvUMfQ4\\\\r\\\\na=ice-options:trickle\\\\r\\\\na=fingerprint:sha-256 AE:A8:F2:1B:49:9E:32:75:5B:72:21:DB:E4:48:71:CA:C2:E8:AB:28:5E:D1:EA:36:88:B7:14:E3:97:94:92:02\\\\r\\\\na=setup:actpass\\\\r\\\\na=mid:1\\\\r\\\\na=extmap:14 urn:ietf:params:rtp-hdrext:toffset\\\\r\\\\na=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\\\\r\\\\na=extmap:13 urn:3gpp:video-orientation\\\\r\\\\na=extmap:3 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\\\\r\\\\na=extmap:12 http://www.webrtc.org/experiments/rtp-hdrext/playout-delay\\\\r\\\\na=extmap:11 http://www.webrtc.org/experiments/rtp-hdrext/video-content-type\\\\r\\\\na=extmap:7 http://www.webrtc.org/experiments/rtp-hdrext/video-timing\\\\r\\\\na=extmap:8 http://tools.ietf.org/html/draft-ietf-avtext-framemarking-07\\\\r\\\\na=extmap:9 http://www.webrtc.org/experiments/rtp-hdrext/color-space\\\\r\\\\na=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid\\\\r\\\\na=extmap:5 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\\\\r\\\\na=extmap:6 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\\\\r\\\\na=recvonly\\\\r\\\\na=rtcp-mux\\\\r\\\\na=rtcp-rsize\\\\r\\\\na=rtpmap:96 VP8/90000\\\\r\\\\na=rtcp-fb:96 goog-remb\\\\r\\\\na=rtcp-fb:96 transport-cc\\\\r\\\\na=rtcp-fb:96 ccm fir\\\\r\\\\na=rtcp-fb:96 nack\\\\r\\\\na=rtcp-fb:96 nack pli\\\\r\\\\na=rtpmap:97 rtx/90000\\\\r\\\\na=fmtp:97 apt=96\\\\r\\\\na=rtpmap:98 VP9/90000\\\\r\\\\na=rtcp-fb:98 goog-remb\\\\r\\\\na=rtcp-fb:98 transport-cc\\\\r\\\\na=rtcp-fb:98 ccm fir\\\\r\\\\na=rtcp-fb:98 nack\\\\r\\\\na=rtcp-fb:98 nack pli\\\\r\\\\na=fmtp:98 profile-id=0\\\\r\\\\na=rtpmap:99 rtx/90000\\\\r\\\\na=fmtp:99 apt=98\\\\r\\\\na=rtpmap:100 VP9/90000\\\\r\\\\na=rtcp-fb:100 goog-remb\\\\r\\\\na=rtcp-fb:100 transport-cc\\\\r\\\\na=rtcp-fb:100 ccm fir\\\\r\\\\na=rtcp-fb:100 nack\\\\r\\\\na=rtcp-fb:100 nack pli\\\\r\\\\na=fmtp:100 profile-id=2\\\\r\\\\na=rtpmap:101 rtx/90000\\\\r\\\\na=fmtp:101 apt=100\\\\r\\\\na=rtpmap:102 H264/90000\\\\r\\\\na=rtcp-fb:102 goog-remb\\\\r\\\\na=rtcp-fb:102 transport-cc\\\\r\\\\na=rtcp-fb:102 ccm fir\\\\r\\\\na=rtcp-fb:102 nack\\\\r\\\\na=rtcp-fb:102 nack pli\\\\r\\\\na=fmtp:102 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\\\r\\\\na=rtpmap:122 rtx/90000\\\\r\\\\na=fmtp:122 apt=102\\\\r\\\\na=rtpmap:127 H264/90000\\\\r\\\\na=rtcp-fb:127 goog-remb\\\\r\\\\na=rtcp-fb:127 transport-cc\\\\r\\\\na=rtcp-fb:127 ccm fir\\\\r\\\\na=rtcp-fb:127 nack\\\\r\\\\na=rtcp-fb:127 nack pli\\\\r\\\\na=fmtp:127 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42001f\\\\r\\\\na=rtpmap:121 rtx/90000\\\\r\\\\na=fmtp:121 apt=127\\\\r\\\\na=rtpmap:125 H264/90000\\\\r\\\\na=rtcp-fb:125 goog-remb\\\\r\\\\na=rtcp-fb:125 transport-cc\\\\r\\\\na=rtcp-fb:125 ccm fir\\\\r\\\\na=rtcp-fb:125 nack\\\\r\\\\na=rtcp-fb:125 nack pli\\\\r\\\\na=fmtp:125 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\\\r\\\\na=rtpmap:107 rtx/90000\\\\r\\\\na=fmtp:107 apt=125\\\\r\\\\na=rtpmap:108 H264/90000\\\\r\\\\na=rtcp-fb:108 goog-remb\\\\r\\\\na=rtcp-fb:108 transport-cc\\\\r\\\\na=rtcp-fb:108 ccm fir\\\\r\\\\na=rtcp-fb:108 nack\\\\r\\\\na=rtcp-fb:108 nack pli\\\\r\\\\na=fmtp:108 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42e01f\\\\r\\\\na=rtpmap:109 rtx/90000\\\\r\\\\na=fmtp:109 apt=108\\\\r\\\\na=rtpmap:124 H264/90000\\\\r\\\\na=rtcp-fb:124 goog-remb\\\\r\\\\na=rtcp-fb:124 transport-cc\\\\r\\\\na=rtcp-fb:124 ccm fir\\\\r\\\\na=rtcp-fb:124 nack\\\\r\\\\na=rtcp-fb:124 nack pli\\\\r\\\\na=fmtp:124 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=4d0032\\\\r\\\\na=rtpmap:120 rtx/90000\\\\r\\\\na=fmtp:120 apt=124\\\\r\\\\na=rtpmap:123 H264/90000\\\\r\\\\na=rtcp-fb:123 goog-remb\\\\r\\\\na=rtcp-fb:123 transport-cc\\\\r\\\\na=rtcp-fb:123 ccm fir\\\\r\\\\na=rtcp-fb:123 nack\\\\r\\\\na=rtcp-fb:123 nack pli\\\\r\\\\na=fmtp:123 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=640032\\\\r\\\\na=rtpmap:119 rtx/90000\\\\r\\\\na=fmtp:119 apt=123\\\\r\\\\na=rtpmap:114 red/90000\\\\r\\\\na=rtpmap:115 rtx/90000\\\\r\\\\na=fmtp:115 apt=114\\\\r\\\\na=rtpmap:116 ulpfec/90000\\\\r\\\\n\\"}",\r\n   "type":"webrtc.offer",\r\n   "devices":[\r\n      {\r\n         "id":"MX4PreviewA",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json",
        "X-Requested-With": "{{$guid}}"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Stop Video Command",
      id: "7410b6b4-54d2-4b76-bea1-880aa8b4b432",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":11,\r\n   "additionalInfo":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"Preview",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Handle Message for Video Command",
      id: "7841cfd7-1146-4fff-af7e-795350c4163f",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":15,\r\n   "additionalInfo":"e6baf99a-a6f4-48e2-8979-997b6fdb45d0",\r\n   "message":"{\\"candidate\\":\\"candidate:918459911 1 udp 2113937151 192.168.1.18 57195 typ host generation 0 ufrag DRkJ network-cost 999\\",\\"sdpMid\\":\\"0\\",\\"sdpMLineIndex\\":0}",\r\n   "type":"webrtc.icecandidate",\r\n   "devices":[\r\n      {\r\n         "id":"Preview",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  group("Security", function() {
    postman[Request]({
      name: "Login",
      id: "290e2d44-e325-4437-b358-d41b788f7a6e",
      method: "POST",
      address: "https://localhost:6001/api/login",
      data: '{"email":"admin@admin.com","password":"12345678"}',
      headers: {
        authority: "localhost:6001",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:6001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:6001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      }
    });

    postman[Request]({
      name: "Refresh Token",
      id: "4ae0606f-863e-4632-b3b6-a9dd59713038",
      method: "POST",
      address: "https://localhost:6001/api/token/refresh",
      data:
        '{"token":"ADMuePakwlLNCczUppYbZJYRiRio/0p9X3aBhvkGD1U4iApYm14tvFGDznvPzRWOIg==","userEmail":"admin@admin.com"}',
      headers: {
        authority: "localhost:6001",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:6001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:6001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      }
    });

    postman[Request]({
      name: "Revoke Token",
      id: "34331dc7-46cf-448c-bcc5-06980c98338b",
      method: "POST",
      address: "https://localhost:6001/api/token/revoke",
      data:
        '{"token":"APwdxIRujdFD5JQBLTgblJ8shzQx/pribQ0lxOXHq0QRzvixInG7pX4QupluXbW7Xw=="}',
      headers: {
        authority: "localhost:6001",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:6001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:6001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      }
    });
  });

  group("Broadcaster", function() {
    postman[Request]({
      name: "Send Broadcast to RabbitMQ",
      id: "1f72f3a5-85d4-494e-a092-7df9a3f68f4d",
      method: "POST",
      address: "https://localhost:5001/Notifications/queued",
      data: '{"content":"string","eventGroup":0}',
      headers: {
        authority: "localhost:5001",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Successful POST request", function() {
          pm.expect(pm.response.code).to.be.oneOf([201, 202]);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Broadcast Direct to Signal R",
      id: "f8b78a75-3217-4799-b0ac-0f4f24b735db",
      method: "POST",
      address: "https://localhost:5001/Notifications/direct",
      data: '{"content":"string","eventGroup":0}',
      headers: {
        authority: "localhost:5001",
        accept: "*/*",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "content-type": "application/json",
        origin: "https://localhost:5001",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Successful POST request", function() {
          pm.expect(pm.response.code).to.be.oneOf([201, 202]);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  group("Timeout", function() {
    postman[Request]({
      name: "Send Play Slides Command",
      id: "e762aad9-05d0-4864-b715-0fdde8ae6b96",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":20,\r\n   "additionalInfo":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Stop Slides Command",
      id: "2978c3bc-ec53-4066-b5e5-f66d52e3f192",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":21,\r\n   "additionalInfo":"{{$guid}}",\r\n   "message":"{\\"type\\":\\"offer\\",\\"sdp\\":\\"v=0\\\\r\\\\no=- 5483512702478408207 2 IN IP4 127.0.0.1\\\\r\\\\ns=-\\\\r\\\\nt=0 0\\\\r\\\\na=group:BUNDLE 0 1\\\\r\\\\na=msid-semantic: WMS\\\\r\\\\nm=audio 9 UDP/TLS/RTP/SAVPF 111 103 104 9 0 8 106 105 13 110 112 113 126\\\\r\\\\nc=IN IP4 0.0.0.0\\\\r\\\\na=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\na=ice-ufrag:K/dw\\\\r\\\\na=ice-pwd:ps9DeVZTxthrlS8j5xvUMfQ4\\\\r\\\\na=ice-options:trickle\\\\r\\\\na=fingerprint:sha-256 AE:A8:F2:1B:49:9E:32:75:5B:72:21:DB:E4:48:71:CA:C2:E8:AB:28:5E:D1:EA:36:88:B7:14:E3:97:94:92:02\\\\r\\\\na=setup:actpass\\\\r\\\\na=mid:0\\\\r\\\\na=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level\\\\r\\\\na=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\\\\r\\\\na=extmap:3 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\\\\r\\\\na=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid\\\\r\\\\na=extmap:5 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\\\\r\\\\na=extmap:6 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\\\\r\\\\na=recvonly\\\\r\\\\na=rtcp-mux\\\\r\\\\na=rtpmap:111 opus/48000/2\\\\r\\\\na=rtcp-fb:111 transport-cc\\\\r\\\\na=fmtp:111 minptime=10;useinbandfec=1\\\\r\\\\na=rtpmap:103 ISAC/16000\\\\r\\\\na=rtpmap:104 ISAC/32000\\\\r\\\\na=rtpmap:9 G722/8000\\\\r\\\\na=rtpmap:0 PCMU/8000\\\\r\\\\na=rtpmap:8 PCMA/8000\\\\r\\\\na=rtpmap:106 CN/32000\\\\r\\\\na=rtpmap:105 CN/16000\\\\r\\\\na=rtpmap:13 CN/8000\\\\r\\\\na=rtpmap:110 telephone-event/48000\\\\r\\\\na=rtpmap:112 telephone-event/32000\\\\r\\\\na=rtpmap:113 telephone-event/16000\\\\r\\\\na=rtpmap:126 telephone-event/8000\\\\r\\\\nm=video 9 UDP/TLS/RTP/SAVPF 96 97 98 99 100 101 102 122 127 121 125 107 108 109 124 120 123 119 114 115 116\\\\r\\\\nc=IN IP4 0.0.0.0\\\\r\\\\na=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\na=ice-ufrag:K/dw\\\\r\\\\na=ice-pwd:ps9DeVZTxthrlS8j5xvUMfQ4\\\\r\\\\na=ice-options:trickle\\\\r\\\\na=fingerprint:sha-256 AE:A8:F2:1B:49:9E:32:75:5B:72:21:DB:E4:48:71:CA:C2:E8:AB:28:5E:D1:EA:36:88:B7:14:E3:97:94:92:02\\\\r\\\\na=setup:actpass\\\\r\\\\na=mid:1\\\\r\\\\na=extmap:14 urn:ietf:params:rtp-hdrext:toffset\\\\r\\\\na=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\\\\r\\\\na=extmap:13 urn:3gpp:video-orientation\\\\r\\\\na=extmap:3 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\\\\r\\\\na=extmap:12 http://www.webrtc.org/experiments/rtp-hdrext/playout-delay\\\\r\\\\na=extmap:11 http://www.webrtc.org/experiments/rtp-hdrext/video-content-type\\\\r\\\\na=extmap:7 http://www.webrtc.org/experiments/rtp-hdrext/video-timing\\\\r\\\\na=extmap:8 http://tools.ietf.org/html/draft-ietf-avtext-framemarking-07\\\\r\\\\na=extmap:9 http://www.webrtc.org/experiments/rtp-hdrext/color-space\\\\r\\\\na=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid\\\\r\\\\na=extmap:5 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\\\\r\\\\na=extmap:6 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\\\\r\\\\na=recvonly\\\\r\\\\na=rtcp-mux\\\\r\\\\na=rtcp-rsize\\\\r\\\\na=rtpmap:96 VP8/90000\\\\r\\\\na=rtcp-fb:96 goog-remb\\\\r\\\\na=rtcp-fb:96 transport-cc\\\\r\\\\na=rtcp-fb:96 ccm fir\\\\r\\\\na=rtcp-fb:96 nack\\\\r\\\\na=rtcp-fb:96 nack pli\\\\r\\\\na=rtpmap:97 rtx/90000\\\\r\\\\na=fmtp:97 apt=96\\\\r\\\\na=rtpmap:98 VP9/90000\\\\r\\\\na=rtcp-fb:98 goog-remb\\\\r\\\\na=rtcp-fb:98 transport-cc\\\\r\\\\na=rtcp-fb:98 ccm fir\\\\r\\\\na=rtcp-fb:98 nack\\\\r\\\\na=rtcp-fb:98 nack pli\\\\r\\\\na=fmtp:98 profile-id=0\\\\r\\\\na=rtpmap:99 rtx/90000\\\\r\\\\na=fmtp:99 apt=98\\\\r\\\\na=rtpmap:100 VP9/90000\\\\r\\\\na=rtcp-fb:100 goog-remb\\\\r\\\\na=rtcp-fb:100 transport-cc\\\\r\\\\na=rtcp-fb:100 ccm fir\\\\r\\\\na=rtcp-fb:100 nack\\\\r\\\\na=rtcp-fb:100 nack pli\\\\r\\\\na=fmtp:100 profile-id=2\\\\r\\\\na=rtpmap:101 rtx/90000\\\\r\\\\na=fmtp:101 apt=100\\\\r\\\\na=rtpmap:102 H264/90000\\\\r\\\\na=rtcp-fb:102 goog-remb\\\\r\\\\na=rtcp-fb:102 transport-cc\\\\r\\\\na=rtcp-fb:102 ccm fir\\\\r\\\\na=rtcp-fb:102 nack\\\\r\\\\na=rtcp-fb:102 nack pli\\\\r\\\\na=fmtp:102 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\\\r\\\\na=rtpmap:122 rtx/90000\\\\r\\\\na=fmtp:122 apt=102\\\\r\\\\na=rtpmap:127 H264/90000\\\\r\\\\na=rtcp-fb:127 goog-remb\\\\r\\\\na=rtcp-fb:127 transport-cc\\\\r\\\\na=rtcp-fb:127 ccm fir\\\\r\\\\na=rtcp-fb:127 nack\\\\r\\\\na=rtcp-fb:127 nack pli\\\\r\\\\na=fmtp:127 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42001f\\\\r\\\\na=rtpmap:121 rtx/90000\\\\r\\\\na=fmtp:121 apt=127\\\\r\\\\na=rtpmap:125 H264/90000\\\\r\\\\na=rtcp-fb:125 goog-remb\\\\r\\\\na=rtcp-fb:125 transport-cc\\\\r\\\\na=rtcp-fb:125 ccm fir\\\\r\\\\na=rtcp-fb:125 nack\\\\r\\\\na=rtcp-fb:125 nack pli\\\\r\\\\na=fmtp:125 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\\\r\\\\na=rtpmap:107 rtx/90000\\\\r\\\\na=fmtp:107 apt=125\\\\r\\\\na=rtpmap:108 H264/90000\\\\r\\\\na=rtcp-fb:108 goog-remb\\\\r\\\\na=rtcp-fb:108 transport-cc\\\\r\\\\na=rtcp-fb:108 ccm fir\\\\r\\\\na=rtcp-fb:108 nack\\\\r\\\\na=rtcp-fb:108 nack pli\\\\r\\\\na=fmtp:108 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42e01f\\\\r\\\\na=rtpmap:109 rtx/90000\\\\r\\\\na=fmtp:109 apt=108\\\\r\\\\na=rtpmap:124 H264/90000\\\\r\\\\na=rtcp-fb:124 goog-remb\\\\r\\\\na=rtcp-fb:124 transport-cc\\\\r\\\\na=rtcp-fb:124 ccm fir\\\\r\\\\na=rtcp-fb:124 nack\\\\r\\\\na=rtcp-fb:124 nack pli\\\\r\\\\na=fmtp:124 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=4d0032\\\\r\\\\na=rtpmap:120 rtx/90000\\\\r\\\\na=fmtp:120 apt=124\\\\r\\\\na=rtpmap:123 H264/90000\\\\r\\\\na=rtcp-fb:123 goog-remb\\\\r\\\\na=rtcp-fb:123 transport-cc\\\\r\\\\na=rtcp-fb:123 ccm fir\\\\r\\\\na=rtcp-fb:123 nack\\\\r\\\\na=rtcp-fb:123 nack pli\\\\r\\\\na=fmtp:123 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=640032\\\\r\\\\na=rtpmap:119 rtx/90000\\\\r\\\\na=fmtp:119 apt=123\\\\r\\\\na=rtpmap:114 red/90000\\\\r\\\\na=rtpmap:115 rtx/90000\\\\r\\\\na=fmtp:115 apt=114\\\\r\\\\na=rtpmap:116 ulpfec/90000\\\\r\\\\n\\"}",\r\n   "type":"webrtc.offer",\r\n   "devices":[\r\n      {\r\n         "id":"SimStream",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json",
        "X-Requested-With": "{{$guid}}"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Next Slide Command",
      id: "e390d1fe-3579-4887-9c89-dbb471343e46",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":22,\r\n   "additionalInfo":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Send Previous Slide Command",
      id: "19712067-ddc6-4983-a75f-b1fa7cbb52a1",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":23,\r\n   "additionalInfo":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Set Current Page Command",
      id: "7e73430f-ac07-48cb-81dd-02456f3e93d2",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":24,\r\n   "additionalInfo":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"1",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Timeout Settings",
      id: "35fc334b-e37e-4fc9-a96c-96c0e8be515a",
      method: "GET",
      address: "https://localhost:5001/Settings/timeout",
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Timeouts outputs",
      id: "c2642284-ebff-4482-b534-e96ecfebea18",
      method: "GET",
      address: "https://localhost:5001/Devices/outputs/timeout",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  group("Video Routing", function() {
    postman[Request]({
      name: "Get Operations sources",
      id: "19711a01-47cd-4ae7-b8be-7a03d1cb7843",
      method: "GET",
      address: "https://localhost:5001/Devices/sources/operations",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Enter Full Screen",
      id: "4fd44038-076e-4505-af7a-aa75c307084e",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":30,\r\n   "additionalInfo":"0",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"tpo1",\r\n         "internalIndex": 0\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Operations outputs",
      id: "dfafba82-b6d7-464d-ae0d-5da020f06998",
      method: "GET",
      address: "https://localhost:5001/Devices/outputs/operations",
      headers: {
        authority: "localhost:5001",
        accept: "text/plain",
        "sec-fetch-dest": "empty",
        "user-agent":
          "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
        "sec-fetch-site": "same-origin",
        "sec-fetch-mode": "cors",
        referer: "https://localhost:5001/swagger/index.html",
        "accept-language": "en,en-US;q=0.9"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Exit Full Screen",
      id: "b2f110dc-846d-42cc-80bb-3f88edabfbe5",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":31,\r\n   "additionalInfo":"0",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"tpo1",\r\n         "internalIndex": 0\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Route Video Source",
      id: "6ec09108-b43e-4cca-8938-15af5c11a987",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":32,\r\n   "additionalInfo":"",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"tpo1",\r\n         "internalIndex": 0\r\n      }\r\n   ],\r\n   "destinations":[\r\n      {\r\n        "id": "tpo1",\r\n        "internalIndex": 0\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Unroute Video Source",
      id: "485ace5c-22c7-4dff-9b04-74666875a607",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":33,\r\n   "additionalInfo":"",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"tpo1",\r\n         "internalIndex": 0\r\n      }\r\n   ]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Video Routing Settings",
      id: "47c79484-4cb4-4eae-88d7-1bc96fe8f29b",
      method: "GET",
      address: "https://localhost:5001/Settings/VideoRouting",
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Start Recording",
      id: "46570b70-5ec6-4671-80d8-c32d20dbe006",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":40,\r\n   "additionalInfo":"",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"System"\r\n      }\r\n   ],\r\n   "destinations":[]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Get Stream Sources",
      id: "c22a6f0c-ae4a-4bb9-8695-9f9c64d8999f",
      method: "GET",
      address: "https://localhost:5001/Media/stream/sources",
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Stop Recording",
      id: "09b6d4ea-36b7-4251-84c1-b6049cf5a877",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":41,\r\n   "additionalInfo":"",\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "id":"System"\r\n      }\r\n   ],\r\n   "destinations":[]\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Show Video Routing Preview",
      id: "1fe809c6-7207-4607-875d-04254382e1e2",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":34,\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "output":null,\r\n         "isDynamic":false,\r\n         "id":"tpo0",\r\n         "name":"UI 1",\r\n         "isActive":true,\r\n         "positionInScreen":1,\r\n         "internalIndex":0,\r\n         "type":"pc",\r\n         "icon":"icon_pc"\r\n      }\r\n   ],\r\n   "destinations":[\r\n      {\r\n         "thumbnail":null,\r\n         "id":"tpo0",\r\n         "name":"Rec1",\r\n         "isActive":true,\r\n         "positionInScreen":-1,\r\n         "internalIndex":0,\r\n         "type":"Encoder",\r\n         "icon":"icon_record"\r\n      }\r\n   ],\r\n   "additionalInfo":"{\\"X\\":180.75,\\"Y\\":221,\\"Width\\":300,\\"Height\\":230.40625}"\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });

    postman[Request]({
      name: "Hide Video Routing Preview",
      id: "ab36ce23-b833-43f6-846a-29b492a856fc",
      method: "PUT",
      address: "https://localhost:5001/Devices/commands",
      data:
        '{\r\n   "commandType":35,\r\n   "message":"",\r\n   "type":"",\r\n   "devices":[\r\n      {\r\n         "output":null,\r\n         "isDynamic":false,\r\n         "id":"tpo0",\r\n         "name":"UI 1",\r\n         "isActive":true,\r\n         "positionInScreen":1,\r\n         "internalIndex":0,\r\n         "type":"pc",\r\n         "icon":"icon_pc"\r\n      }\r\n   ],\r\n   "destinations":[\r\n      {\r\n         "thumbnail":null,\r\n         "id":"tpo0",\r\n         "name":"Rec1",\r\n         "isActive":true,\r\n         "positionInScreen":-1,\r\n         "internalIndex":0,\r\n         "type":"Encoder",\r\n         "icon":"icon_record"\r\n      }\r\n   ],\r\n   "additionalInfo":"{\\"X\\":180.75,\\"Y\\":221,\\"Width\\":300,\\"Height\\":230.40625}"\r\n}',
      headers: {
        accept: "text/plain",
        "Content-Type": "application/json"
      },
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Is an array", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData).to.be.an("array");
        });
      },
      auth(config, Var) {
        config.headers.Authorization = `Bearer ${pm[Var](
          "CURRENT_ACCESS_TOKEN"
        )}`;
      }
    });
  });

  postman[Pre].pop();
}
