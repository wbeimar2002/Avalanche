// Auto-generated by the Load Impact converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";

export let options = { maxRedirects: 4, iterations: "1000" };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    ADMIN_USR: "admin@admin.com",
    ADMIN_PASS: "12345678",
    LOGIN_URL: "https://localhost:6001/api/login"
  }
});

export default function() {
  postman[Pre].push(() => {
    
    var currentToken = pm.environment.get("CURRENT_ACCESS_TOKEN");

    if (currentToken === undefined) {

      //https://k6.io/docs/using-k6/http-requests
      var url = pm.environment.get("LOGIN_URL");
      var payload = JSON.stringify({
        email: pm.environment.get("ADMIN_USR"),
        password: pm.environment.get("ADMIN_PASS")
      });

      var params = {
        headers: {
          'Content-Type': 'application/json',
        },
      };

      var res = http.post(url, payload, params);

      // Verify that we ended up on the user page
      check(res, {
        'login succeeded': 'OK'
      }) || fail('login failed');

      //https://k6.io/docs/javascript-api/k6-http/response-k6-http
      //console.log("Saving the token");
      var responseJson = res.json();
      //console.log("Token: " + responseJson.accessToken);

      pm.environment.set(
        "CURRENT_ACCESS_TOKEN",
        responseJson.accessToken
      );
      
    }

  });

  postman[Request]({
    name: "Send Play Slides Command",
    id: "0b5cb1ff-2c99-4aac-bb64-5da175e6a658",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":8,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "outputs":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Send Stop Slides Command",
    id: "e5bf0db2-3af9-43de-abba-c953a4fc0b25",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":9,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "outputs":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Send Next Slide Command",
    id: "5a730cba-5be0-4b20-992b-2072f280387c",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":10,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "outputs":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Send Previous Slide Command",
    id: "60197417-be7a-4a39-bd9f-589e6bd448b4",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":11,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "outputs":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Set Current Page Command",
    id: "4d0c3f23-5f53-4299-92c2-ade493624e10",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":12,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"12",\r\n   "type":"",\r\n   "outputs":[\r\n      {\r\n         "id":"Timeout",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get Timeout Settings",
    id: "d3322c23-b445-406e-9e89-2f927b8c005d",
    method: "GET",
    address: "https://localhost:5001/Outputs/timeout/settings",
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Pre].pop();
}
