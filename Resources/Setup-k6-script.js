// Auto-generated by the Load Impact converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import http from 'k6/http';
import { check, fail } from 'k6';

export let options = { maxRedirects: 4, iterations: "1" };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    ADMIN_USR: "admin@admin.com",
    ADMIN_PASS: "12345678",
    LOGIN_URL: "https://localhost:6001/api/login"
  }
});

export default function() {
  postman[Pre].push(() => {
    
    var currentToken = pm.environment.get("CURRENT_ACCESS_TOKEN");

    if (currentToken === undefined) {

      //https://k6.io/docs/using-k6/http-requests
      var url = pm.environment.get("LOGIN_URL");
      var payload = JSON.stringify({
        email: pm.environment.get("ADMIN_USR"),
        password: pm.environment.get("ADMIN_PASS")
      });

      var params = {
        headers: {
          'Content-Type': 'application/json',
        },
      };

      var res = http.post(url, payload, params);

      // Verify that we ended up on the user page
      check(res, {
        'login succeeded': 'OK'
      }) || fail('login failed');

      //https://k6.io/docs/javascript-api/k6-http/response-k6-http
      //console.log("Saving the token");
      var responseJson = res.json();
      //console.log("Token: " + responseJson.accessToken);

      pm.environment.set(
        "CURRENT_ACCESS_TOKEN",
        responseJson.accessToken
      );
      
    }

  });

  postman[Request]({
    name: "Get Genders",
    id: "ea19a589-4896-490b-a5c7-77be08c395c3",
    method: "GET",
    address: "https://localhost:5001/Metadata/genders",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get Procedure Types",
    id: "cfa3af23-b07a-4324-bc07-437fb876ed49",
    method: "GET",
    address: "https://localhost:5001/Metadata/proceduretypes",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Register new patient",
    id: "71545af2-d53f-48a7-b4b8-8cc3f9a2d39e",
    method: "POST",
    address: "https://localhost:5001/Patients",
    data:
      '{\r\n  "id": "string",\r\n  "name": "testing",\r\n  "lastName": "testing",\r\n  "dateOfBirth": "2020-02-13T15:04:32.364Z",\r\n  "gender": "string"\r\n}',
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "content-type": "application/json",
      origin: "https://localhost:5001",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Successful POST request", function() {
        pm.expect(pm.response.code).to.be.oneOf([201, 202]);
      });

      pm.test("Patient was created", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData.name).to.eql("testing");
        pm.expect(jsonData.lastName).to.eql("testing");
        pm.expect(jsonData).to.have.property("id");
        pm.expect(jsonData).to.have.property("name");
        pm.expect(jsonData).to.have.property("lastName");
        pm.expect(jsonData).to.have.property("department");
        pm.expect(jsonData).to.have.property("gender");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Quick patient registration",
    id: "6131e3c3-78b5-4545-8dbc-aa2d5eecf0a8",
    method: "POST",
    address: "https://localhost:5001/Patients/quick",
    headers: {
      authority: "localhost:5001",
      "content-length": "0",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      origin: "https://localhost:5001",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Successful POST request", function() {
        pm.expect(pm.response.code).to.be.oneOf([201, 202]);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Search Patient",
    id: "1fa3e7ec-8978-4727-b920-1ccd3a34977b",
    method: "POST",
    address: "https://localhost:5001/Patients/filtered",
    data: '{"term":"string","page":0,"limit":0}',
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "content-type": "application/json",
      origin: "https://localhost:5001",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Contains data for paging", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.have.a.property("items");
        pm.expect(jsonData).to.have.a.property("nextPage");
        pm.expect(jsonData).to.have.a.property("previousPage");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get Physicians",
    id: "aa74eba7-ab5b-4750-8fe8-3aee660d9fca",
    method: "GET",
    address: "https://localhost:5001/Physicians",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Pre].pop();
}
