// Auto-generated by the Load Impact converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";

export let options = { maxRedirects: 4, iterations: "1000" };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  environment: {
    ADMIN_USR: "admin@admin.com",
    ADMIN_PASS: "12345678",
    LOGIN_URL: "https://localhost:6001/api/login"
  }
});

export default function() {
  postman[Pre].push(() => {
    
    var currentToken = pm.environment.get("CURRENT_ACCESS_TOKEN");

    if (currentToken === undefined) {

      //https://k6.io/docs/using-k6/http-requests
      var url = pm.environment.get("LOGIN_URL");
      var payload = JSON.stringify({
        email: pm.environment.get("ADMIN_USR"),
        password: pm.environment.get("ADMIN_PASS")
      });

      var params = {
        headers: {
          'Content-Type': 'application/json',
        },
      };

      var res = http.post(url, payload, params);

      // Verify that we ended up on the user page
      check(res, {
        'login succeeded': 'OK'
      }) || fail('login failed');

      //https://k6.io/docs/javascript-api/k6-http/response-k6-http
      //console.log("Saving the token");
      var responseJson = res.json();
      //console.log("Token: " + responseJson.accessToken);

      pm.environment.set(
        "CURRENT_ACCESS_TOKEN",
        responseJson.accessToken
      );
      
    }

  });


  postman[Request]({
    name: "Get Content Types",
    id: "168ea46c-fc3d-428a-9737-de3ae307cc8c",
    method: "GET",
    address: "https://localhost:5001/Metadata/contenttypes",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get Content by Type",
    id: "d894ce3a-fd2f-47b7-a37d-6210a334dd9c",
    method: "GET",
    address: "https://localhost:5001/Outputs/Content/P",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get An State of an Output",
    id: "539840d1-bee0-4528-9ba8-e3ed4a23892b",
    method: "GET",
    address: "https://localhost:5001/Outputs/1234/states/1",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get States of an Output",
    id: "eb6b28c8-3943-42db-ac13-b71b5b97f729",
    method: "GET",
    address: "https://localhost:5001/Outputs/1234/states",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Get All Outputs",
    id: "d4b065fe-b5b1-44c6-a2e5-f567189877b7",
    method: "GET",
    address: "https://localhost:5001/Outputs/all",
    headers: {
      authority: "localhost:5001",
      accept: "text/plain",
      "sec-fetch-dest": "empty",
      "user-agent":
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
      "sec-fetch-site": "same-origin",
      "sec-fetch-mode": "cors",
      referer: "https://localhost:5001/swagger/index.html",
      "accept-language": "en,en-US;q=0.9"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Send Play Video Command",
    id: "53224fce-1fd7-441f-81b1-e8ecb0584de7",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":0,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"{\\"type\\":\\"offer\\",\\"sdp\\":\\"v=0\\\\r\\\\no=- 5483512702478408207 2 IN IP4 127.0.0.1\\\\r\\\\ns=-\\\\r\\\\nt=0 0\\\\r\\\\na=group:BUNDLE 0 1\\\\r\\\\na=msid-semantic: WMS\\\\r\\\\nm=audio 9 UDP/TLS/RTP/SAVPF 111 103 104 9 0 8 106 105 13 110 112 113 126\\\\r\\\\nc=IN IP4 0.0.0.0\\\\r\\\\na=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\na=ice-ufrag:K/dw\\\\r\\\\na=ice-pwd:ps9DeVZTxthrlS8j5xvUMfQ4\\\\r\\\\na=ice-options:trickle\\\\r\\\\na=fingerprint:sha-256 AE:A8:F2:1B:49:9E:32:75:5B:72:21:DB:E4:48:71:CA:C2:E8:AB:28:5E:D1:EA:36:88:B7:14:E3:97:94:92:02\\\\r\\\\na=setup:actpass\\\\r\\\\na=mid:0\\\\r\\\\na=extmap:1 urn:ietf:params:rtp-hdrext:ssrc-audio-level\\\\r\\\\na=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\\\\r\\\\na=extmap:3 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\\\\r\\\\na=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid\\\\r\\\\na=extmap:5 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\\\\r\\\\na=extmap:6 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\\\\r\\\\na=recvonly\\\\r\\\\na=rtcp-mux\\\\r\\\\na=rtpmap:111 opus/48000/2\\\\r\\\\na=rtcp-fb:111 transport-cc\\\\r\\\\na=fmtp:111 minptime=10;useinbandfec=1\\\\r\\\\na=rtpmap:103 ISAC/16000\\\\r\\\\na=rtpmap:104 ISAC/32000\\\\r\\\\na=rtpmap:9 G722/8000\\\\r\\\\na=rtpmap:0 PCMU/8000\\\\r\\\\na=rtpmap:8 PCMA/8000\\\\r\\\\na=rtpmap:106 CN/32000\\\\r\\\\na=rtpmap:105 CN/16000\\\\r\\\\na=rtpmap:13 CN/8000\\\\r\\\\na=rtpmap:110 telephone-event/48000\\\\r\\\\na=rtpmap:112 telephone-event/32000\\\\r\\\\na=rtpmap:113 telephone-event/16000\\\\r\\\\na=rtpmap:126 telephone-event/8000\\\\r\\\\nm=video 9 UDP/TLS/RTP/SAVPF 96 97 98 99 100 101 102 122 127 121 125 107 108 109 124 120 123 119 114 115 116\\\\r\\\\nc=IN IP4 0.0.0.0\\\\r\\\\na=rtcp:9 IN IP4 0.0.0.0\\\\r\\\\na=ice-ufrag:K/dw\\\\r\\\\na=ice-pwd:ps9DeVZTxthrlS8j5xvUMfQ4\\\\r\\\\na=ice-options:trickle\\\\r\\\\na=fingerprint:sha-256 AE:A8:F2:1B:49:9E:32:75:5B:72:21:DB:E4:48:71:CA:C2:E8:AB:28:5E:D1:EA:36:88:B7:14:E3:97:94:92:02\\\\r\\\\na=setup:actpass\\\\r\\\\na=mid:1\\\\r\\\\na=extmap:14 urn:ietf:params:rtp-hdrext:toffset\\\\r\\\\na=extmap:2 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time\\\\r\\\\na=extmap:13 urn:3gpp:video-orientation\\\\r\\\\na=extmap:3 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01\\\\r\\\\na=extmap:12 http://www.webrtc.org/experiments/rtp-hdrext/playout-delay\\\\r\\\\na=extmap:11 http://www.webrtc.org/experiments/rtp-hdrext/video-content-type\\\\r\\\\na=extmap:7 http://www.webrtc.org/experiments/rtp-hdrext/video-timing\\\\r\\\\na=extmap:8 http://tools.ietf.org/html/draft-ietf-avtext-framemarking-07\\\\r\\\\na=extmap:9 http://www.webrtc.org/experiments/rtp-hdrext/color-space\\\\r\\\\na=extmap:4 urn:ietf:params:rtp-hdrext:sdes:mid\\\\r\\\\na=extmap:5 urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id\\\\r\\\\na=extmap:6 urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id\\\\r\\\\na=recvonly\\\\r\\\\na=rtcp-mux\\\\r\\\\na=rtcp-rsize\\\\r\\\\na=rtpmap:96 VP8/90000\\\\r\\\\na=rtcp-fb:96 goog-remb\\\\r\\\\na=rtcp-fb:96 transport-cc\\\\r\\\\na=rtcp-fb:96 ccm fir\\\\r\\\\na=rtcp-fb:96 nack\\\\r\\\\na=rtcp-fb:96 nack pli\\\\r\\\\na=rtpmap:97 rtx/90000\\\\r\\\\na=fmtp:97 apt=96\\\\r\\\\na=rtpmap:98 VP9/90000\\\\r\\\\na=rtcp-fb:98 goog-remb\\\\r\\\\na=rtcp-fb:98 transport-cc\\\\r\\\\na=rtcp-fb:98 ccm fir\\\\r\\\\na=rtcp-fb:98 nack\\\\r\\\\na=rtcp-fb:98 nack pli\\\\r\\\\na=fmtp:98 profile-id=0\\\\r\\\\na=rtpmap:99 rtx/90000\\\\r\\\\na=fmtp:99 apt=98\\\\r\\\\na=rtpmap:100 VP9/90000\\\\r\\\\na=rtcp-fb:100 goog-remb\\\\r\\\\na=rtcp-fb:100 transport-cc\\\\r\\\\na=rtcp-fb:100 ccm fir\\\\r\\\\na=rtcp-fb:100 nack\\\\r\\\\na=rtcp-fb:100 nack pli\\\\r\\\\na=fmtp:100 profile-id=2\\\\r\\\\na=rtpmap:101 rtx/90000\\\\r\\\\na=fmtp:101 apt=100\\\\r\\\\na=rtpmap:102 H264/90000\\\\r\\\\na=rtcp-fb:102 goog-remb\\\\r\\\\na=rtcp-fb:102 transport-cc\\\\r\\\\na=rtcp-fb:102 ccm fir\\\\r\\\\na=rtcp-fb:102 nack\\\\r\\\\na=rtcp-fb:102 nack pli\\\\r\\\\na=fmtp:102 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42001f\\\\r\\\\na=rtpmap:122 rtx/90000\\\\r\\\\na=fmtp:122 apt=102\\\\r\\\\na=rtpmap:127 H264/90000\\\\r\\\\na=rtcp-fb:127 goog-remb\\\\r\\\\na=rtcp-fb:127 transport-cc\\\\r\\\\na=rtcp-fb:127 ccm fir\\\\r\\\\na=rtcp-fb:127 nack\\\\r\\\\na=rtcp-fb:127 nack pli\\\\r\\\\na=fmtp:127 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42001f\\\\r\\\\na=rtpmap:121 rtx/90000\\\\r\\\\na=fmtp:121 apt=127\\\\r\\\\na=rtpmap:125 H264/90000\\\\r\\\\na=rtcp-fb:125 goog-remb\\\\r\\\\na=rtcp-fb:125 transport-cc\\\\r\\\\na=rtcp-fb:125 ccm fir\\\\r\\\\na=rtcp-fb:125 nack\\\\r\\\\na=rtcp-fb:125 nack pli\\\\r\\\\na=fmtp:125 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f\\\\r\\\\na=rtpmap:107 rtx/90000\\\\r\\\\na=fmtp:107 apt=125\\\\r\\\\na=rtpmap:108 H264/90000\\\\r\\\\na=rtcp-fb:108 goog-remb\\\\r\\\\na=rtcp-fb:108 transport-cc\\\\r\\\\na=rtcp-fb:108 ccm fir\\\\r\\\\na=rtcp-fb:108 nack\\\\r\\\\na=rtcp-fb:108 nack pli\\\\r\\\\na=fmtp:108 level-asymmetry-allowed=1;packetization-mode=0;profile-level-id=42e01f\\\\r\\\\na=rtpmap:109 rtx/90000\\\\r\\\\na=fmtp:109 apt=108\\\\r\\\\na=rtpmap:124 H264/90000\\\\r\\\\na=rtcp-fb:124 goog-remb\\\\r\\\\na=rtcp-fb:124 transport-cc\\\\r\\\\na=rtcp-fb:124 ccm fir\\\\r\\\\na=rtcp-fb:124 nack\\\\r\\\\na=rtcp-fb:124 nack pli\\\\r\\\\na=fmtp:124 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=4d0032\\\\r\\\\na=rtpmap:120 rtx/90000\\\\r\\\\na=fmtp:120 apt=124\\\\r\\\\na=rtpmap:123 H264/90000\\\\r\\\\na=rtcp-fb:123 goog-remb\\\\r\\\\na=rtcp-fb:123 transport-cc\\\\r\\\\na=rtcp-fb:123 ccm fir\\\\r\\\\na=rtcp-fb:123 nack\\\\r\\\\na=rtcp-fb:123 nack pli\\\\r\\\\na=fmtp:123 level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=640032\\\\r\\\\na=rtpmap:119 rtx/90000\\\\r\\\\na=fmtp:119 apt=123\\\\r\\\\na=rtpmap:114 red/90000\\\\r\\\\na=rtpmap:115 rtx/90000\\\\r\\\\na=fmtp:115 apt=114\\\\r\\\\na=rtpmap:116 ulpfec/90000\\\\r\\\\n\\"}",\r\n   "type":"webrtc.offer",\r\n   "outputs":[\r\n      {\r\n         "id":"Preview",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Send Stop Video Command",
    id: "58713317-ec10-421b-831e-ad1f881727c4",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":1,\r\n   "sessionId":"f0c81f47-4633-4418-9e27-472fb1ce3ec5",\r\n   "message":"",\r\n   "type":"",\r\n   "outputs":[\r\n      {\r\n         "id":"Preview",\r\n         "name":"",\r\n         "preview":"",\r\n         "isActive":true\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Request]({
    name: "Send Handle Message for Video Command",
    id: "f128e254-a58d-4747-9e0d-1b22cb0a6b79",
    method: "PUT",
    address: "https://localhost:5001/Outputs/commands",
    data:
      '{\r\n   "commandType":5,\r\n   "sessionId":"e6baf99a-a6f4-48e2-8979-997b6fdb45d0",\r\n   "message":"{\\"candidate\\":\\"candidate:918459911 1 udp 2113937151 192.168.1.18 57195 typ host generation 0 ufrag DRkJ network-cost 999\\",\\"sdpMid\\":\\"0\\",\\"sdpMLineIndex\\":0}",\r\n   "type":"webrtc.icecandidate",\r\n   "outputs":[\r\n      {\r\n\r\n      }\r\n   ]\r\n}',
    headers: {
      accept: "text/plain",
      "Content-Type": "application/json"
    },
    post(response) {
      pm.test("Status code is 200", function() {
        pm.response.to.have.status(200);
      });

      pm.test("Is an array", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData).to.be.an("array");
      });
    },
    auth(config, Var) {
      config.headers.Authorization = `Bearer ${pm[Var](
        "CURRENT_ACCESS_TOKEN"
      )}`;
    }
  });

  postman[Pre].pop();
}
