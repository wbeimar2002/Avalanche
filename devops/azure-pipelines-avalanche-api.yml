name: avalanche-web-$(majorversion).$(minorversion).$(patch).$(releasestage)_$(majorversion).$(minorversion).$(Date:yyMM).$(Date:dd)$(Rev:rr)

trigger:
  - dev

resources:
  repositories:
  
  - repository: avalanche-api
    type: git
    name: avalanche/avalanche-api
    ref: dev

  - repository: devops
    type: git
    name: avalanche/devops

pool:
  vmImage: 'ubuntu-latest'

variables:

  - template: pipeline-bug-workaround.yml
  - name: BuildConfiguration
    value: 'Release'

stages:
- stage: build
  jobs:
  - job: build_test_publish
    steps:

     - task: UseDotNet@2
       displayName: 'use dotnet 3.1.x'
       inputs:
        version: '3.1.x'
        packageType: runtime
        
     - task: UseDotNet@2
       displayName: 'use dotnet 2.2.x'
       inputs:
        version: '2.2.x'
        packageType: runtime

     - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
       displayName: 'Prepare analysis on SonarQube'
       inputs:
          SonarQube: sonarqube
          projectKey: 'avalanche-api'
          projectName: 'avalanche-api'
       condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'dev'))

     - task: DotNetCoreCLI@2
       displayName: 'dotnet build'
       inputs:
        projects: Code/Avalanche.Api.sln
        arguments: '--configuration=Avalanche-Api-Sonar'

     
     - task: DotNetCoreCLI@2
       displayName: 'dotnet test'
       inputs:
        command: test
        projects: Code/Avalanche.Api.Tests/Avalanche.Api.Tests.csproj
        testRunTitle: TestResults
        workingDirectory: Code/Avalanche.Api.Tests
     
     - task: CopyFiles@2
       displayName: 'Copy Files to: $(Agent.BuildDirectory)\TestResults'
       inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '*.trx'
        TargetFolder: '$(Agent.BuildDirectory)\TestResults'

     #- task: DotNetCoreCLI@2
       #displayName: 'dotnet test Avalanche.Api.Tests.csproj'
       #inputs:
        #command: test
        #projects: Code/Avalanche.Api.Tests/Avalanche.Api.Tests.csproj
        #testRunTitle: TestResults
        #workingDirectory: Code/Avalanche.Api.Tests
    
     - task: CopyFiles@2
       displayName: 'Copy Files to: $(Agent.BuildDirectory)\TestResults'
       inputs:
          SourceFolder: '$(Agent.TempDirectory)'
          Contents: '*.trx'
          TargetFolder: '$(Agent.BuildDirectory)\TestResults'
     
     - task: SonarQubeAnalyze@4
       condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'dev'))

    
     - task: SonarQubePublish@4
       condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'dev'))
       inputs:
        pollingTimeoutSec: '300'

     - task: DotNetCoreCLI@2
       displayName: 'Publish Avalanche.Api'
       inputs:
        command: publish
        publishWebProjects: false
        projects: '**/Code/Avalanche.Api/Avalanche.Api.csproj'
        arguments: '-c $(BuildConfiguration)  -o app'
        zipAfterPublish: false
        modifyOutputPath: false
 
     - task: PublishBuildArtifacts@1
       displayName: 'Publish Build Artifacts'
       inputs:
        PathtoPublish: 'app'
        ArtifactName: app 


