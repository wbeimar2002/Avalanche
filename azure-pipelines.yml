name: $(Date:yyyyMMdd)$(Rev:.rr)

trigger:
- dev

pool:
  vmImage: 'ubuntu-latest'

variables:

- group: DEV-AVALANCHE-API

- name: BuildConfiguration
  value: 'Release'


steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: restore
    projects: '**/*.csproj '
    vstsFeed: 'd61e3552-9162-4b94-9184-b843c159ef58'

- task: DotNetCoreCLI@2
  displayName: 'Restore Avalanche.Api'
  inputs:
    command: restore
    projects: '**/Code/Avalanche.Api/Avalanche.Api.csproj'
    vstsFeed: 'd61e3552-9162-4b94-9184-b843c159ef58'

- task: DotNetCoreCLI@2
  displayName: 'Build Avalanche.Api'
  inputs:
    projects: '**/Code/Avalanche.Api/Avalanche.Api.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Publish Avalanche.Api'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/Code/Avalanche.Api/Avalanche.Api.csproj'
    arguments: '-c $(BuildConfiguration)  -o app'
    zipAfterPublish: false
    modifyOutputPath: false

- powershell: |
   $temp = "$(ImageName)"
   $temp = $temp.ToLower()
   Write-Host "##vso[task.setvariable variable=ImageNameLowercase;]$temp"
  displayName: 'PowerShell Script'

- task: Docker@0
  displayName: 'Run a Docker command-Build'
  inputs:
    action: 'Run a Docker command'
    customCommand: 'build -t $(ImageNameLowercase) . -f Code/Avalanche.Api/DokerfileForAdoPipeline'

- task: Docker@2
  displayName: 'Run a Docker command -Tag'
  inputs:
    command: 'tag '
    arguments: '$(ImageNameLowercase) $(AcrRepository)/$(ImageNameLowercase):$(Build.BuildNumber)'
    addPipelineData: false

- task: Docker@1
  displayName: 'Run a Docker command -Push'
  inputs:
    azureSubscriptionEndpoint: '7770e554-30b1-4187-b512-c68b0f1617b7'
    azureContainerRegistry: '$(AcrRepository)'
    command: push
    imageName: '$(AcrRepository)/$(ImageNameLowercase):$(Build.BuildNumber)'

