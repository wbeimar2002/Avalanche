version: '3.4'

networks:
   app_net:
     external: true

services:      
  avalanche.api:
    container_name: avalancheapi
    image: ${DOCKER_REGISTRY-}avalancheapi     
    restart: always
    build:
      context: .
      dockerfile: Avalanche.Api/Dockerfile
    volumes:
    - type: bind
      source: C:\Olympus\AvalancheLogs
      target: /logs
      read_only: false
      volume:
        nocopy: true
    - type: bind
      source: C:\Olympus\certificates
      target: /certificates
      read_only: true
      volume:
        nocopy: true
    - type: bind
      source: C:\Olympus\apps\config\AvalancheApi
      target: /config
      read_only: false
      volume:
        nocopy: true
    - type: bind #this is a temporary demo hack setting. storage should not be a concern of the api 
      source: C:\Library
      target: /library
      read_only: true
      volume:
        nocopy: true
    networks:
      app_net:
        ipv4_address: 192.168.1.60
    environment:
      hostIpAddress: 'host.docker.internal'
      mediaServiceGrpcPort: '7001'
      pieServiceAddress: 'patientInfoEngine'
      pieServiceGrpcPort: '9089'
      storageServiceGrpcPort: '5012'
      dataManagementGrpcPort: '5012'
      stateServiceGrpcAddress: 'avalanche-systemstate-host'
      stateServiceGrpcPort: '7011'
      demoLibraryFolder: '/library' #this is a temporary demo hack setting. storage should not be a concern of the api
      grpcCertificate: '/certificates/grpc_localhost_root_l1.pfx' 
      grpcPassword: '0123456789'
      grpcServerValidationCertificate: '/certificates/grpc_localhost_root_l1.cer'
      grpcThumprint: '86CD34D2FADDFFE00D31F4C12294782ECCB9041F'
      CookieSettings:Path: '/api/files' #note the browser treats this as case sensitive
      CookieSettings:ExpirationSeconds: '86400'
      seqUrl: 'http://seq:5341'
      logging:loglevel:default: 'Information'
      loggerFileName: 'avalancheapilogs.txt'
      loggerFolder: '/logs'
      loggerFileSizeLimit: 209715200
      loggerRetainedFileCountLimit: 5
      TZ: "America/Los_Angeles"
      PgsTimeoutGrpcPort: '9500'
    depends_on:
      - seqserver
      - avalanche.security.server
  avalanche.security.server:
    container_name: avalanchesecurityserver
    image: ${DOCKER_REGISTRY-}avalanchesecurityserver
    build:
      context: .
      dockerfile: Avalanche.Security.Server/Dockerfile  
    restart: always
    volumes:
    - type: bind
      source: C:\Olympus\dbs
      target: /data
      read_only: false
      volume:
        nocopy: true
    - type: bind
      source: C:\Olympus\certificates
      target: /certificates
      read_only: true
      volume:
        nocopy: true
    - type: bind
      source: C:\Olympus\AvalancheLogs
      target: /logs
      read_only: false
      volume:
        nocopy: true
    - type: bind
      source: C:\Olympus\apps\config\AvalancheApi
      target: /config
      read_only: false
      volume:
        nocopy: true
    networks:
      app_net:
        ipv4_address: 192.168.1.62
    environment:
      seqUrl: 'http://seq:5341'
      logging:loglevel:default: 'debug'
      loggerFileName: 'avalanchesecurityserverlogs.txt'
      loggerFolder: '/logs'
      loggerFileSizeLimit: 209715200
      loggerRetainedFileCountLimit: 5
    depends_on:
      - seqserver

  seqserver:
    container_name: seq
    image: 'datalust/seq:latest'
    ports:
      - '5341:80'
    networks:
        app_net:
            ipv4_address: 192.168.1.61
    environment:
      ACCEPT_EULA: 'Y'
    volumes:
      - type: volume
        source: seq_data
        target: /data

volumes:
    seq_data:

